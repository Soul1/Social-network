{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","hoc/withAuthRedirect.js","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","DialogItem","props","path","id","to","className","s","dialog","src","avatarImg","name","Message","message","maxLength5","maxLengthCreator","MessageReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","validate","required","Dialogs","state","dialogsPage","dialogsElements","users","map","d","key","messagesElements","messages","m","classes","dialogs","dialogsItem","messanges","values","sendMessage","newMessageBody","mapStateToPropsForRedirect","isAuth","auth","DialogsContainer","compose","connect","dispatch","sendMessageCreator","Component","RedirectComponent","this","React"],"mappings":"2GACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,KAAO,sBAAsB,QAAU,2B,+FCa7EC,EAVI,SAACC,GAChB,IAAIC,EAAO,YAAcD,EAAME,GAE/B,OACI,kBAAC,IAAD,CAASC,GAAIF,EAAMG,UAAWC,IAAEC,QAC5B,yBAAKC,IAAKP,EAAMQ,YADpB,IACkC,yBAAKJ,UAAWC,IAAEI,MAAOT,EAAMS,QCC1DC,EANC,SAACV,GACb,OACI,yBAAKI,UAAWC,IAAEM,SAAUX,EAAMW,U,iCCEpCC,EAAcC,YAAiB,GAY/BC,EAAmBC,YAAU,CAACC,KAAM,WAAjBD,EAVF,SAACf,GAEtB,OACE,0BAAOiB,SAAUjB,EAAMkB,cACrB,kBAACC,EAAA,EAAD,CAAOC,UAAWC,IAAUC,SAAU,CAACC,IAAUX,GAAaH,KAAM,mBACpE,4CAiCSe,EA1BC,SAACxB,GAEf,IAAIyB,EAAQzB,EAAM0B,YAEdC,EAAkBF,EAAMG,MAAMC,KAAI,SAAAC,GAAC,OAAI,kBAAC,EAAD,CAAYC,IAAKD,EAAE5B,GAAIO,KAAMqB,EAAErB,KAAMP,GAAI4B,EAAE5B,GAAIM,UAAWsB,EAAEtB,eAEnGwB,EAAmBP,EAAMQ,SAASJ,KAAI,SAAAK,GAAC,OAAI,kBAAC,EAAD,CAASH,IAAKG,EAAEhC,GAAIS,QAASuB,EAAEvB,QAAST,GAAIgC,EAAEhC,QAM7F,OACE,yBAAKE,UAAW+B,IAAQC,SACtB,yBAAKhC,UAAW+B,IAAQE,aACrBV,GAEH,yBAAKvB,UAAW+B,IAAQG,WACtB,6BAAMN,GAEN,kBAAClB,EAAD,CAAkBG,SAZF,SAACsB,GACrBvC,EAAMwC,YAAYD,EAAOE,sB,wDC3BzBC,EAA6B,SAACjB,GAAD,MAAY,CAC3CkB,OAAQlB,EAAMmB,KAAKD,S,OCkBfE,EAAmBC,YACvBC,aAjBsB,SAACtB,GACvB,MAAO,CACLC,YAAaD,EAAMC,gBAII,SAACsB,GAE1B,MAAO,CAELR,YAAa,SAACC,GACZO,EAASC,YAAmBR,UDVF,SAACS,GAAe,IAExCC,EAFuC,iLAIzC,OAAKC,KAAKpD,MAAM2C,OACT,kBAACO,EAAcE,KAAKpD,OADI,kBAAC,IAAD,CAAUG,GAAI,eAJJ,GAEbkD,IAAMH,WAStC,OAFqCH,YAAQL,EAARK,CAAoCI,KCMlDL,CAGtBtB,GAEYqB","file":"static/js/4.01d3df82.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__FO29f\",\"name\":\"Dialogs_name__154eY\",\"message\":\"Dialogs_message__3MST2\"};","import React from 'react';\r\nimport s from './../Dialogs.module.css';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\nconst DialogItem = (props) => {\r\n    let path = \"/dialogs/\" + props.id;\r\n\r\n    return (\r\n        <NavLink to={path} className={s.dialog}>\r\n            <img src={props.avatarImg} /> <div className={s.name}>{props.name}</div>\r\n        </NavLink>\r\n    )\r\n};\r\n\r\nexport default DialogItem","import React from 'react';\r\nimport s from './../Dialogs.module.css';\r\n\r\n\r\nconst Message = (props) => {\r\n    return (\r\n        <div className={s.message}>{props.message}</div>\r\n    )\r\n};\r\n\r\nexport default Message","import React from 'react';\r\nimport classes from './Dialogs.module.css';\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {required, maxLengthCreator} from \"../../utils/validators/validator\";\r\nimport {Textarea} from \"../common/FormsControls/FormsControls\";\r\n\r\nconst maxLength5 =  maxLengthCreator(5);\r\n\r\nconst addMessageForm = (props) => {\r\n\r\n  return (\r\n    <form  onSubmit={props.handleSubmit}>\r\n      <Field component={Textarea} validate={[required, maxLength5]} name={\"newMessageBody\"}/>\r\n      <button>Send</button>\r\n    </form>\r\n  )\r\n};\r\n\r\nconst MessageReduxForm = reduxForm({form: \"message\"})(addMessageForm);\r\n\r\nconst Dialogs = (props) => {\r\n\r\n  let state = props.dialogsPage;\r\n\r\n  let dialogsElements = state.users.map(d => <DialogItem key={d.id} name={d.name} id={d.id} avatarImg={d.avatarImg}/>);\r\n\r\n  let messagesElements = state.messages.map(m => <Message key={m.id} message={m.message} id={m.id}/>);\r\n\r\n  const addNewMessage = (values) => {\r\n    props.sendMessage(values.newMessageBody)\r\n  };\r\n\r\n  return (\r\n    <div className={classes.dialogs}>\r\n      <div className={classes.dialogsItem}>\r\n        {dialogsElements}\r\n      </div>\r\n      <div className={classes.messanges}>\r\n        <div>{messagesElements}</div>\r\n\r\n        <MessageReduxForm onSubmit={addNewMessage}/>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dialogs","import React from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n  isAuth: state.auth.isAuth,\r\n})\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n\r\n  class RedirectComponent extends React.Component{\r\n    render() {\r\n      if (!this.props.isAuth) return <Redirect to={\"/login\"}/>\r\n      return <Component {...this.props}/>\r\n    }\r\n  }\r\n\r\n  let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n\r\n  return ConnectedAuthRedirectComponent\r\n}","import React from 'react';\r\nimport {sendMessageCreator,} from \"../../redux/Reducers/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    dialogsPage: state.dialogsPage,\r\n  }\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n\r\n  return {\r\n\r\n    sendMessage: (newMessageBody) => {\r\n      dispatch(sendMessageCreator(newMessageBody))\r\n    },\r\n  }\r\n};\r\n\r\nconst DialogsContainer = compose(\r\n  connect(mapStateToProps, mapDispatchToProps),\r\n  withAuthRedirect\r\n) (Dialogs);\r\n\r\nexport default DialogsContainer"],"sourceRoot":""}